:toc:

[[glossaire]]
Glossaire
---------

[[ajax]]
AJAX
~~~~

[[algorithmie]]
Algorithmie
~~~~~~~~~~~

Un algorithme est une suite finie et non-ambiguë d’instructions
permettant de donner la réponse à un problème.

[[application]]
Application
~~~~~~~~~~~

[[angularjs]]
AngularJS
~~~~~~~~~

[[antipattern]]
Antipattern
~~~~~~~~~~~

Les anti-patrons ou antipatterns sont des erreurs courantes de
conception des logiciels. Leur nom vient du fait que ces erreurs sont
apparues dès les phases de conception du logiciel, notamment par
l'absence ou la mauvaise utilisation de patrons de conception, appelés
design pattern en anglais. ## Base de Données ## Cardinalité ## Classe
## Design Pattern

Pourquoi réinventer la roue? Le patron de conception (plus souvent
appelé design pattern) est un arrangement caractéristique de modules,
reconnu comme bonne pratique en réponse à un problème de conception d'un
logiciel. Il décrit une solution standard, utilisable dans la conception
de différents logiciels.

Il existe trois familles de patrons de conception selon leur utilisation
:

* de construction : ils définissent comment faire l'instanciation et la
configuration des classes et des objets ;
* structuraux : ils définissent comment organiser les classes d'un
programme dans une structure plus large (séparant l'interface de
l'implémentation) ;
* comportementaux : ils définissent comment organiser les objets pour
que ceux-ci collaborent (distribution des responsabilités) et expliquent
le fonctionnement des algorithmes impliqués.

[[framework]]
Framework
~~~~~~~~~

Les frameworks sont conçus et utilisés pour modeler l'architecture des
logiciels applicatifs, des applications web, des middlewares et des
composants logiciels. Les frameworks sont acquis par les informaticiens,
puis incorporés dans des logiciels applicatifs mis sur le marché, ils
sont par conséquent rarement achetés et installés séparément par un
utilisateur final.

Un framework se distingue d'une simple bibliothèque logicielle
principalement par :

* son caractère générique, faiblement spécialisé, contrairement à
certaines bibliothèques ; un framework peut à ce titre être constitué de
plusieurs bibliothèques chacune spécialisée dans un domaine. Un
framework peut néanmoins être spécialisé, sur un langage particulier,
une plateforme spécifique, un domaine particulier : communication de
données, data mapping, etc. ;
* le cadre de travail (traduction littérale de l'anglais : framework)
qu'il impose de par sa construction même, guidant l'architecture
logicielle voire conduisant le développeur à respecter certains patrons
de conception ; les bibliothèques le constituant sont alors organisées
selon le même paradigme.

[[héritage]]
Héritage
~~~~~~~~

[[javascript]]
JavaScript
~~~~~~~~~~

Principalement employé dans les pages web interactives mais aussi pour
les serveurs avec l'utilisation de NodeJs. Ce langage est orienté objet
à prototype, c'est-à-dire que les bases du langage et ses principales
interfaces sont fournies par des objets qui ne sont pas des instances de
classes, mais qui sont chacun équipés de constructeurs permettant de
créer leurs propriétés, et notamment une propriété de prototypage qui
permet d'en créer des objets héritiers personnalisés.

[[mvc]]
MVC
~~~

Modèle Vue Controlleur. Dépendant de la POO, il s'agit d'un Design
Pattern destiné aux interfaces graphiques et très populaire pour les
applications web. * Un modèle contient les données à afficher. * Une vue
contient la présentation de l'interface graphique. * Un contrôleur
contient la logique concernant les actions effectuées par l'utilisateur.
## MySQL ## Normalisation ## Optimisation ## OS : Système d'Exploitation
(Operating System) Le système d'exploitation est le premier programme
exécuté lors de la mise en marche de l'ordinateur. Chaque OS a des
avantages et des inconvénients. Vous connaissez probablement Windows
mais il y en a de nombreux : * Windows * Linux * Android * Mac OS *
Symbian * ...

[[php]]
PHP
~~~

PHP: Hypertext Preprocessor. Langage de programmation libre,
principalement utilisé pour produire des pages Web dynamiques via un
serveur HTTP (nginx, apache). ## Polymorphisme ## POO : Programmation
Orientée Objet Paradigme de programmation informatique. Il consiste en
la définition et l'interaction de briques logicielles appelées objets ;
un objet représente un concept, une idée ou toute entité du monde
physique, comme une voiture, une personne ou encore une page d'un livre.
Il possède une structure interne et un comportement, et il sait
interagir avec ses pairs. Il s'agit donc de représenter ces objets et
leurs relations ; l'interaction entre les objets via leurs relations
permet de concevoir et réaliser les fonctionnalités attendues, de mieux
résoudre le ou les problèmes. Dès lors, l'étape de modélisation revêt
une importance majeure et nécessaire pour la POO. C'est elle qui permet
de transcrire les éléments du réel sous forme virtuelle.

[[processus]]
Processus
~~~~~~~~~

[[react]]
REACT
~~~~~

[[requête]]
Requête
~~~~~~~

[[sécurité]]
Sécurité
~~~~~~~~

[[sql]]
SQL
~~~

[[ssh]]
SSH
~~~

[[symfony]]
Symfony
~~~~~~~

[[tdd]]
TDD
~~~

Test-driven development (TDD) ou en français développement piloté par
les tests est une technique de développement de logiciel qui préconise
d'écrire les tests unitaires avant d'écrire le code source d'un
logiciel. Le cycle préconisé par TDD comporte cinq étapes :

* écrire un premier test ;
* vérifier qu'il échoue (car le code qu'il teste n'existe pas), afin de
vérifier que le test est valide ;
* écrire juste le code suffisant pour passer le test ;
* vérifier que le test passe ;
* puis réusiner le code, c'est-à-dire l'améliorer tout en gardant les
mêmes fonctionnalités.

[[test-unitaire]]
Test Unitaire
~~~~~~~~~~~~~

Le Test Unitaire est une procédure permettant de vérifier le bon
fonctionnement d'une partie précise d'un logiciel ou d'une portion d'un
programme (appelée « unité » ou « module »).

[[versionning]]
Versionning
~~~~~~~~~~~
